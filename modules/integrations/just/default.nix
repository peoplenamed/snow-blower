topLevel@{ inputs, flake-parts-lib, ... }: {
  imports = [
    inputs.flake-parts.flakeModules.flakeModules
    ../../common.nix
  ];
  flake.flakeModules.integrations-just = {
    imports = [
      topLevel.config.flake.flakeModules.common
    ];

    options.perSystem = flake-parts-lib.mkPerSystemOption ({ lib, pkgs, config, ... }: let
     inherit (lib) types mkOption mkEnableOption attrsets;
     inherit (import ./utils.nix { inherit lib pkgs; }) recipeModule recipeType;

    in {

      imports = [{
        options.snow-blower.just.recipes = mkOption {
          type = types.submoduleWith {
            modules = [{ freeformType = types.attrsOf recipeType; }];
            specialArgs = { inherit pkgs; };
          };
          default = { };
          description = ''
            The recipes that are avaliable to just
          '';
        };
      }];

      options.snow-blower.just = {
        package = mkOption {
          type = types.package;
          default = pkgs.just;
          defaultText = lib.literalExpression "pkgs.just";
          description = "The just package to use.";
        };

        commonFileName = mkOption {
          type = types.str;
          default = "just-flake.just";
          description = ''
            The name of the common justfile generated by this module.
          '';
        };
      };


      config.snow-blower.shell = {
            packages = [
              config.snow-blower.just.package
            ];

                shellPostHook =
                  let
                    commonJustfile = pkgs.writeTextFile {
                      name = "justfile";
                      text =
                        lib.concatStringsSep "\n"
                          (lib.mapAttrsToList (name: recipe: recipe.outputs.justfile) config.snow-blower.just.recipes);
                    };
                  in
                  ''
                    ln -sf ${builtins.toString commonJustfile} ./${config.snow-blower.just.commonFileName}
                  '';
      };
    });

  };
}
